{"version":3,"sources":["components/Home/index.js","redux/action/index.js","redux/actionType/index.js","App.js","serviceWorker.js","redux/reducer/reducer.js","redux/reducer/index.js","redux/saga/index.js","redux/store/index.js","index.js"],"names":["Home","props","display","this","shop","length","dis","dis1","className","list","map","item","index","key","name","price","infor","onClick","onAdd","id","style","num","sub_add","type","deletelist","lineHeight","float","React","Component","add","App","connect","state","data","dispatch","incrementAsync","Boolean","window","location","hostname","match","total","arr","reducer","combineReducers","action","items","filter","forEach","push","splice","console","log","helloSaga","watchIncrementAsync","rootSage","delay","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Saga","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.af649450.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../../style/home.css'\r\n\r\nclass Home extends React.Component {\r\n      constructor(props){\r\n            super(props)\r\n      }\r\n\r\n\r\n      render(){\r\n            const display = this.props.shop.length ? 'none' : 'block', dis = this.props.shop.length ? 'flex' : 'none',  dis1 = this.props.shop.length ? 'block' : 'none';\r\n            return(\r\n                  <div className=\"home\">\r\n                        <div className=\"h-wrap\">\r\n                              <div className=\"l-items\">\r\n                                    <span className=\"i-name\">名称</span>\r\n                                    <span className=\"i-price\">价格</span>\r\n                                    <span className=\"i-infor\">商品描述</span>\r\n                                    <span className=\"i-add\">/</span>\r\n                              </div>\r\n                              {this.props.list.map( (item, index) => {\r\n                                    return(\r\n                                          <div key={index} className=\"l-items\">\r\n                                                <span className=\"i-name\">{item.name}</span>\r\n                                                <span className=\"i-price\">{item.price}</span>\r\n                                                <span className=\"i-infor\">{item.infor}</span>\r\n                                                <span className=\"i-add\" onClick={() => this.props.onAdd(item.id)}>添加</span>\r\n                                          </div>\r\n                                    )\r\n                              })}\r\n                        </div>\r\n                        <div className=\"shop\">\r\n                              <h2 style={{display}}>暂时还没有商品</h2>\r\n                              <div className=\"s-items\" style={{display: dis}}>\r\n                                    <span className=\"s-name\">名称</span>\r\n                                    <span className=\"s-total\">小计</span>\r\n                                    <span>添加</span>\r\n                                    <span className=\"s-num\">数量</span>\r\n                                    <span>减少</span>\r\n                                    <span>/</span>\r\n                              </div>\r\n                              {this.props.shop.map( (item, index) => {\r\n                                    return (\r\n                                          <div className=\"s-items\" key={index}>\r\n                                                <span className=\"s-name\">{item.name}</span>\r\n                                                <span className=\"s-total\">{item.num*item.price}元</span>\r\n                                                <button onClick={ () => {this.props.sub_add({type: 0, id: index})}}>加1</button>\r\n                                                <span className=\"s-num\">{item.num}个</span>\r\n                                                <button onClick={ () => {this.props.sub_add({type: 1, id: item.id})}}>减1</button>\r\n                                                <span className=\"s-del\" onClick={ () => this.props.deletelist(item.id)}>删除</span>\r\n                                          </div>\r\n                                    )\r\n                              })}\r\n                        </div>\r\n                        <div style={{display: dis1, lineHeight: '40px'}}>\r\n                              <span style={{float: 'right'}}>总计：{this.props.num}元</span>\r\n                        </div>\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nexport default Home;","import { ADD, INCREMENTASYNC, GOODLISTS, SUBSTRACT_ADD, DELETE} from '../actionType'\r\n\r\nexport function add(id){\r\n      return {\r\n            type: ADD,\r\n            id: id\r\n      }\r\n}\r\n\r\nexport function incrementAsync(){\r\n      return {\r\n            type: INCREMENTASYNC,\r\n      }\r\n}\r\n\r\nexport function list(){\r\n      return {\r\n            type: GOODLISTS\r\n      }\r\n}\r\n\r\nexport function sub_add(item){\r\n      return {\r\n            type: SUBSTRACT_ADD,\r\n            item\r\n      }\r\n}\r\n\r\nexport function deletelist(id){\r\n      return {\r\n            type: DELETE,\r\n            id\r\n      }\r\n}","export const ADD = 'add'\r\nexport const INCREMENTASYNC = 'incrementasync';\r\nexport const GOODLISTS = 'goodlists'\r\nexport const DELETE = 'delete';\r\nexport const SUBSTRACT_ADD = 'substract_add'","import { connect} from 'react-redux'\n\nimport Home from './components/Home'\nimport { add, incrementAsync, sub_add, deletelist} from './redux/action'\n\nfunction mapStateToProps(state){\n  return {\n    id: state.list.id,\n    list: state.data.list,\n    shop: state.data.shop,\n    num: state.data.num\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    onAdd: (id) => dispatch(add(id)),\n    incrementAsync: () => dispatch(incrementAsync()),\n    sub_add: (item) => dispatch(sub_add(item)),\n    deletelist: (id) => dispatch(deletelist(id))\n  }\n}\n\nconst App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD, SUBSTRACT_ADD, DELETE, INCREMENTASYNC} from '../actionType'\r\n\r\nlet total;\r\n\r\n      const arr =[\r\n            {\r\n                  id: 0,\r\n                  name: '矿泉水',\r\n                  price: 4,\r\n                  infor: '这是一瓶矿泉水。'\r\n            },\r\n            {\r\n                  id: 1,\r\n                  name: '苹果',\r\n                  price: 3,\r\n                  infor: '白雪公主吃过的苹果，你值得拥有。'\r\n            },\r\n            {\r\n                  id: 2,\r\n                  name: '手机',\r\n                  price: 50,\r\n                  infor: '看上去好像没什么异常。'\r\n            },\r\n            {\r\n                  id: 3,\r\n                  name: '拖鞋',\r\n                  price: 6,\r\n                  infor: '这个假期，我是最优之选。'\r\n            }\r\n      ]\r\n\r\nexport function list(\r\n      state = {\r\n            id: 1\r\n      }, action\r\n){\r\n      switch( action.type){\r\n            default:\r\n                  return state;\r\n      }\r\n}\r\n\r\nexport function data(\r\n      state = {\r\n            list: arr,\r\n            shop: [],\r\n            num: 0\r\n      },\r\n      action\r\n){\r\n      switch(action.type){\r\n            case ADD: \r\n                  let items = state.list.filter( item => item.id === action.id)[0];\r\n                  let  type = true;\r\n                  state.shop.forEach( item => {\r\n                        if( item.id == items.id){\r\n                              type = false;\r\n                              item.num += 1;\r\n                        }\r\n                  })\r\n                  total = 0;\r\n                  if( type){\r\n                        items.num = 1;\r\n                        state.shop.push(items)\r\n                  }\r\n                  \r\n                  state.shop.forEach( (item) => { \r\n                        total += item.num*item.price\r\n                  })\r\n                  return {\r\n                        ...state,\r\n                        shop: state.shop,\r\n                        num: total\r\n                  }\r\n            case SUBSTRACT_ADD:\r\n            \r\n                        state.shop.forEach( (item, index) => { \r\n                              if(item.id == action.item.id){\r\n                                    if(action.item.type){\r\n                                          item.num -= 1;\r\n                                          if( item.num == 0){\r\n                                                state.shop.splice(index, 1);\r\n                                          }\r\n                                    }else{\r\n                                          item.num += 1;\r\n                                    }\r\n                              }\r\n                        })\r\n                        console.log(action.item.id, state.shop)\r\n\r\n                        total = 0;\r\n                        state.shop.forEach( (item) => { \r\n                              total += item.num*item.price\r\n                        })\r\n\r\n                        return {\r\n                              ...state,\r\n                              shop: state.shop,\r\n                              num: total\r\n                        }\r\n                  case DELETE:\r\n                        console.log(action.id)\r\n                        state.shop.forEach( (item, index) => {\r\n                              if( item.id == action.id){\r\n                                    state.shop.splice(index, 1)\r\n                              }\r\n                        })\r\n\r\n                        total = 0;\r\n                        state.shop.forEach( (item) => { \r\n                              total += item.num*item.price\r\n                        })\r\n\r\n                        return {\r\n                              ...state,\r\n                              shop: state.shop,\r\n                              num: total\r\n                        }\r\n            default:\r\n                  return state\r\n      }\r\n}","import { combineReducers} from 'redux'\r\n\r\nimport { list, data} from './reducer'\r\n\r\nconst reducer = combineReducers({\r\n      list,\r\n      data\r\n})\r\n\r\n\r\nexport default reducer","import { put, delay, takeEvery, all} from 'redux-saga/effects'\r\n\r\nimport {add} from '../action'\r\n\r\nimport { INCREMENTASYNC} from '../actionType'\r\n\r\nfunction* helloSaga(){\r\n      console.log('hello,saga')\r\n}\r\n\r\nfunction* incrementAsync(){\r\n      yield delay(1000)\r\n      yield put(add(10))\r\n}\r\n\r\nfunction* watchIncrementAsync(){\r\n      yield takeEvery(INCREMENTASYNC, incrementAsync)\r\n}\r\n\r\nexport default function* rootSage(){\r\n      yield all([\r\n            helloSaga(),\r\n            watchIncrementAsync()\r\n      ])\r\n}","import { createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport reducer from '../reducer'\r\nimport Saga from '../saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(Saga)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './redux/store'\n\nReactDOM.render(\n      <Provider store = {store}>\n            <App />\n      </Provider>\n      \n      , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}